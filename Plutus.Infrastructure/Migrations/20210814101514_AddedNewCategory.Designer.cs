// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Plutus.Infrastructure;

namespace Plutus.Infrastructure.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20210814101514_AddedNewCategory")]
    partial class AddedNewCategory
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "6.0.0-preview.7.21378.4")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("Plutus.Domain.Category", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.Property<int>("TransactionType")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("Name", "TransactionType")
                        .IsUnique();

                    b.ToTable("Category", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("7ae15088-adbe-4666-b8a2-c808006999eb"),
                            Name = "Food & Drinks",
                            TransactionType = 0
                        },
                        new
                        {
                            Id = new Guid("33cc6ca7-6fd7-4582-8661-445db50da886"),
                            Name = "Online Shopping",
                            TransactionType = 0
                        },
                        new
                        {
                            Id = new Guid("e777300d-40c4-4b9d-a43e-54126a404671"),
                            Name = "Travel",
                            TransactionType = 0
                        },
                        new
                        {
                            Id = new Guid("adb40027-8122-481c-ba6b-b3c3df9377c3"),
                            Name = "Transfer",
                            TransactionType = 0
                        },
                        new
                        {
                            Id = new Guid("439dc4a2-f13c-486c-aa80-eade8c518253"),
                            Name = "Bills",
                            TransactionType = 0
                        },
                        new
                        {
                            Id = new Guid("c9e14393-73ef-4fca-9bc1-a42f136c9a96"),
                            Name = "Salary",
                            TransactionType = 1
                        },
                        new
                        {
                            Id = new Guid("e39652e2-b8cf-4f1c-b31a-20b0a564b31e"),
                            Name = "Transfer",
                            TransactionType = 1
                        },
                        new
                        {
                            Id = new Guid("47cba66c-6eff-4e5f-8f4e-861b9a726597"),
                            Name = "Gift",
                            TransactionType = 1
                        },
                        new
                        {
                            Id = new Guid("c323143a-c288-442f-8b7a-58065588e6e1"),
                            Name = "Subscriptions",
                            TransactionType = 0
                        });
                });

            modelBuilder.Entity("Plutus.Domain.Transaction", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<decimal>("Amount")
                        .HasColumnType("numeric");

                    b.Property<Guid>("CategoryId")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedOnUtc")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValue(new DateTime(2021, 8, 14, 10, 15, 14, 59, DateTimeKind.Utc).AddTicks(2325));

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .HasMaxLength(1024)
                        .HasColumnType("character varying(1024)");

                    b.Property<bool>("InActive")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("LastModifiedUtc")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("TransactionType")
                        .HasColumnType("integer");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("character varying(16)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("Username");

                    b.ToTable("Transaction", (string)null);
                });

            modelBuilder.Entity("Plutus.Domain.User", b =>
                {
                    b.Property<string>("Username")
                        .HasMaxLength(16)
                        .HasColumnType("character varying(16)");

                    b.Property<DateTime>("CreatedOnUtc")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValue(new DateTime(2021, 8, 14, 10, 15, 14, 62, DateTimeKind.Utc).AddTicks(6298));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("character varying(32)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("character varying(32)");

                    b.Property<bool>("InActive")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("LastModifiedUtc")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("character varying(32)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("character varying(128)")
                        .HasColumnName("Password");

                    b.HasKey("Username");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("User", (string)null);

                    b.HasData(
                        new
                        {
                            Username = "sanjay",
                            CreatedOnUtc = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "sanjay11@outlook.com",
                            FirstName = "Sanjay",
                            InActive = false,
                            LastModifiedUtc = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastName = "Idpuganti",
                            Password = "�f��G\n��.���@v�6�A��1�x��"
                        });
                });

            modelBuilder.Entity("Plutus.Domain.Transaction", b =>
                {
                    b.HasOne("Plutus.Domain.Category", "Category")
                        .WithMany("Transactions")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Plutus.Domain.User", "User")
                        .WithMany("Transactions")
                        .HasForeignKey("Username")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Plutus.Domain.Category", b =>
                {
                    b.Navigation("Transactions");
                });

            modelBuilder.Entity("Plutus.Domain.User", b =>
                {
                    b.Navigation("Transactions");
                });
#pragma warning restore 612, 618
        }
    }
}
