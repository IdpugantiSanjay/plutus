version: '3.4'

services:
#  plutus.web:
#    container_name: plutus-web
#    image: "${DOCKER_REGISTRY-}isanjay112/plutus-web:latest"
#    ports:
#      - 80:80
#
#  plutus.restapi:
#    container_name: plutus-api
#    image: "${DOCKER_REGISTRY-}plutusapi:latest"
#    build:
#      context: .
#      dockerfile: Plutus.Api/Dockerfile
#    depends_on:
#      database-server:
#        condition: service_healthy
#    environment:
#      - PGPASSWORD=${PG_PASSWORD}
#      - PGUSER=${PG_USER}
#      - PGDATABASE=${PG_DATABASE}
#      - PGHOST=${PG_HOST}
#    ports:
#      - 5000:80

  database-server:
    image: postgres:13
    container_name: plutus-database
    environment:
      - POSTGRES_PASSWORD=${PG_PASSWORD}
      - POSTGRES_USER=${PG_USER}
      - POSTGRES_DB=${PG_DATABASE}
    ports:
      - 5432:5432
    volumes:
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${PG_USER} -d ${PG_DATABASE}"]
      interval: 5s
      timeout: 5s
      retries: 5
      
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.4.0
    container_name: elasticsearch
    environment:
      - xpack.security.enabled=false
      - discovery.type=single-node
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    cap_add:
      - IPC_LOCK
    volumes:
      - elasticsearch-data:/usr/share/elasticsearch/data
    ports:
      - 9200:9200
      - 9300:9300

  kibana:
    container_name: kibana
    image: docker.elastic.co/kibana/kibana:7.4.0
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    ports:
      - 5601:5601
    depends_on:
      - elasticsearch
  
volumes:
  elasticsearch-data:
    driver: local

  postgres-data:
    driver: local